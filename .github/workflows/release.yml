name: Release
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.17.3
        uses: actions/setup-go@v1
        with:
          go-version: 1.17.3
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Set env
        id: set_env
        run: echo ::set-output name=RELEASE_VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Get dependencies
        run: go mod download

      - name: Install bazel
        run: |
          curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
          echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
          sudo apt update && sudo apt install bazel-4.2.2
          bazel --version
          touch ~/.netrc
          export SQUZY_VERSION=latest

      - name: Tests
        run: |
          make test

      - name: Release to Docker and Github
        run: |
          echo ${{ secrets.DOCKER_TOKEN }} | docker login -u squzy --password-stdin
          export SQUZY_VERSION=${{ steps.set_env.outputs.RELEASE_VERSION }}
          bazel run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_monitoring:squzy_push_hub_ci
          bazel run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_agent_server:squzy_push_hub_ci
          bazel run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_api:squzy_push_hub_ci
          bazel run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_storage:squzy_push_hub_ci
          bazel run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_application_monitoring:squzy_push_hub_ci
          bazel run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_incident:squzy_push_hub_ci
          bazel run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_notification:squzy_push_hub_ci
          make build_agent version=${{ steps.set_env.outputs.RELEASE_VERSION }}
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_agent_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-arm64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_agent_${{ steps.set_env.outputs.RELEASE_VERSION }}-windows-amd64.exe
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_agent_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-amd64
          make build_bin_squzy version=${{ steps.set_env.outputs.RELEASE_VERSION }}
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_monitoring_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-arm64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_monitoring_${{ steps.set_env.outputs.RELEASE_VERSION }}-darwin-amd64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_monitoring_${{ steps.set_env.outputs.RELEASE_VERSION }}-windows-amd64.exe
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_monitoring_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-amd64
          make build_agent_server version=${{ steps.set_env.outputs.RELEASE_VERSION }}
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_agent_server_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-arm64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_agent_server_${{ steps.set_env.outputs.RELEASE_VERSION }}-darwin-amd64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_agent_server_${{ steps.set_env.outputs.RELEASE_VERSION }}-windows-amd64.exe
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_agent_server_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-amd64
          make build_bin_api version=${{ steps.set_env.outputs.RELEASE_VERSION }}
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_api_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-arm64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_api_${{ steps.set_env.outputs.RELEASE_VERSION }}-darwin-amd64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_api_${{ steps.set_env.outputs.RELEASE_VERSION }}-windows-amd64.exe
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_api_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-amd64
          make build_bin_storage version=${{ steps.set_env.outputs.RELEASE_VERSION }}
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_storage_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-arm64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_storage_${{ steps.set_env.outputs.RELEASE_VERSION }}-darwin-amd64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_storage_${{ steps.set_env.outputs.RELEASE_VERSION }}-windows-amd64.exe
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_storage_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-amd64
          make build_application_monitoring version=${{ steps.set_env.outputs.RELEASE_VERSION }}
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_application_monitoring_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-arm64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_application_monitoring_${{ steps.set_env.outputs.RELEASE_VERSION }}-darwin-amd64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_application_monitoring_${{ steps.set_env.outputs.RELEASE_VERSION }}-windows-amd64.exe
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_application_monitoring_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-amd64
          make build_incident version=${{ steps.set_env.outputs.RELEASE_VERSION }}
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_incident_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-arm64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_incident_${{ steps.set_env.outputs.RELEASE_VERSION }}-darwin-amd64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_incident_${{ steps.set_env.outputs.RELEASE_VERSION }}-windows-amd64.exe
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_incident_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-amd64
          make build_notification version=${{ steps.set_env.outputs.RELEASE_VERSION }}
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_notification_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-arm64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_notification_${{ steps.set_env.outputs.RELEASE_VERSION }}-darwin-amd64
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_notification_${{ steps.set_env.outputs.RELEASE_VERSION }}-windows-amd64.exe
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_notification_${{ steps.set_env.outputs.RELEASE_VERSION }}-linux-amd64

  build_mac_agent:
    name: Build mac agent with cgo
    runs-on: macOS-10.15
    needs: build
    steps:
      - name: Set up Go 1.15.7
        uses: actions/setup-go@v1
        with:
          go-version: 1.15.7
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Set env
        id: set_env
        run: echo ::set-output name=RELEASE_VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Get dependencies
        run: go mod download

      - name: Release Github Mac Agent
        run: |
          make build_agent_mac version=${{ steps.set_env.outputs.RELEASE_VERSION }}
          ./scripts/git_release.sh github_api_token=${{ secrets.GITHUB_RELEASE }} owner=squzy repo=squzy tag=${{ steps.set_env.outputs.RELEASE_VERSION }} filename=./bin/squzy_agent_${{ steps.set_env.outputs.RELEASE_VERSION }}-darwin-amd64
